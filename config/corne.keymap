/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        soft-off {
            bindings = <&soft_off>;
            key-positions = <1 2>;
            layers = <3>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <19 20>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB               &kp Q        &kp W           &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I          &kp O              &kp P            &kp ESCAPE
&kp NON_US_BACKSLASH  &kp A        &kp S           &kp D     &kp F  &kp G        &kp H    &kp J  &kp K          &kp L              &lt 3 SEMI       &kp EXCLAMATION
&kp LSHFT             &mt LCTRL Z  &mt LEFT_ALT X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA      &mt RIGHT_ALT DOT  &mt RCTRL SLASH  &kp RIGHT_SHIFT
                                                   &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp BACKSPACE
            >;
        };

        symbols {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1           &kp N2       &kp N3     &kp N4      &kp N5       &kp N6     &kp N7         &kp N8        &kp N9            &kp N0         &trans
&trans  &kp RA(KP_PLUS)  &kp AT_SIGN  &kp POUND  &kp DOLLAR  &kp TILDE    &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp SINGLE_QUOTE  &kp SEMICOLON  &trans
&trans  &trans           &trans       &trans     &trans      &trans       &trans     &trans         &trans        &trans            &trans         &trans
                                      &trans     &trans      &trans       &trans     &trans         &trans
            >;
        };

        brackers {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans        &kp NUMBER_2  &kt NUMBER_3  &kt NUMBER_4  &kp N5    &kp CARET  &kp AMPS      &kp ASTRK     &kp LPAR    &kp RPAR    &trans
&trans  &kt LS(LPAR)  &kt RPAR      &kt LA(LBRC)  &kt LA(RBRC)  &trans    &trans     &kt LA(LBKT)  &kt LA(RBKT)  &kt LA(LT)  &kt LA(GT)  &trans
&trans  &trans        &trans        &trans        &kp EQUAL     &trans    &trans     &kp MINUS     &trans        &trans      &trans      &trans
                                    &trans        &trans        &trans    &trans     &trans        &trans
            >;
        };

        navigation {
            bindings = <
&trans      &trans        &trans        &trans        &trans  &trans    &trans             &trans           &trans        &trans           &trans  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &trans    &kp LEFT_ARROW     &kp DOWN_ARROW   &kp UP_ARROW  &kp RIGHT_ARROW  &trans  &trans
&trans      &trans        &trans        &trans        &trans  &trans    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans        &trans           &trans  &trans
                                        &trans        &trans  &trans    &kp LA(SPACE)      &trans           &trans
            >;
        };
    };
};

/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <300>;
    flavor = "tap-preferred";
    require-prior-idle-ms = <125>;
};

/ {
    combos {
        compatible = "zmk,combos";

        soft-off {
            bindings = <&soft_off>;
            key-positions = <1 2>;
            layers = <3>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <19 20>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q        &kp W           &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I          &kp O             &kp P            &kp ESCAPE
&kp GRAVE  &kp A        &kp S           &kp D     &kp F  &kp G        &kp H    &kp J  &kp K          &kp L             &lt 3 SEMI       &kp SINGLE_QUOTE
&kp LSHFT  &mt LCTRL Z  &mt LEFT_ALT X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA      &mt LEFT_ALT DOT  &mt RCTRL SLASH  &kp RIGHT_SHIFT
                                        &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp BACKSPACE
            >;
        };

        symbols {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCLAMATION   &kp AT_SIGN       &kp POUND         &kp DOLLAR        &kp PERCENT         &kp CARET         &kp AMPERSAND     &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &kp RA(NUMBER_1)  &kp RA(NUMBER_2)  &kp RA(NUMBER_3)  &kp RA(NUMBER_4)  &kp RA(NUMBER_5)    &kp RA(NUMBER_6)  &kp RA(NUMBER_7)  &kp RA(NUMBER_8)  &kp RA(SINGLE_QUOTE)  &kp RA(SEMICOLON)      &trans
&trans  &trans            &trans            &trans            &trans            &trans              &trans            &kp MINUS         &kp LEFT_BRACKET  &trans                &trans                 &trans
                                            &trans            &trans            &trans              &trans            &trans            &trans
            >;
        };

        brackers {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp NUMBER_1     &kp NUMBER_2       &kp NUMBER_3      &kp NUMBER_4      &kp N5    &kp NUMBER_6  &kp NUMBER_7          &kp NUMBER_8           &kp NUMBER_9   &kp NUMBER_0    &trans
&trans  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp RA(NUMBER_9)  &kp RA(NUMBER_0)  &trans    &trans        &kp RA(LEFT_BRACKET)  &kp RA(RIGHT_BRACKET)  &kp RA(COMMA)  &kp RA(PERIOD)  &trans
&trans  &trans           &trans             &trans            &kp EQUAL         &trans    &trans        &kp MINUS             &trans                 &trans         &trans          &trans
                                            &trans            &trans            &trans    &trans        &trans                &trans
            >;
        };

        navigation {
            bindings = <
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5  &kp F6                      &kp F7          &kp F8             &kp F9           &kp F10           &kp F11  &kp F12
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &trans                      &kp LEFT_ARROW  &kp DOWN_ARROW     &kp UP_ARROW     &kp RIGHT_ARROW   &trans   &trans
&trans      &trans        &trans        &trans        &trans  &kp LS(LC(LG(NUMBER_4)))    &trans          &trans             &kp K_MUTE       &kp C_PLAY_PAUSE  &trans   &trans
                                        &trans        &trans  &trans                      &kp LA(SPACE)   &kp C_VOLUME_DOWN  &kp C_VOLUME_UP
            >;
        };
    };
};
